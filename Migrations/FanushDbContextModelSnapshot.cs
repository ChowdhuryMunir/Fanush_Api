// <auto-generated />
using System;
using Fanush.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fanush.Migrations
{
    [DbContext(typeof(FanushDbContext))]
    partial class FanushDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Engineering",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Human Resources",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Marketing",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Finance",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentName = "Operations",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 6,
                            DepartmentName = "IT",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 7,
                            DepartmentName = "Sales",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 8,
                            DepartmentName = "Customer Service",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 9,
                            DepartmentName = "Research & Development",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 10,
                            DepartmentName = "Legal",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            ContactNumber = "1234567890",
                            DateJoined = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "Joshim@mail.com",
                            EmergencyContact = "9876543210",
                            EmployeeName = "Joshim Bro",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            ContactNumber = "9876543210",
                            DateJoined = new DateTime(2015, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "Sansa@example.com",
                            EmergencyContact = "1234567890",
                            EmployeeName = "Sansa",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            ContactNumber = "5555555555",
                            DateJoined = new DateTime(2008, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1982, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "michael.johnson@example.com",
                            EmergencyContact = "6666666666",
                            EmployeeName = "Michael Johnson",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 3
                        },
                        new
                        {
                            EmployeeId = 4,
                            ContactNumber = "4444444444",
                            DateJoined = new DateTime(2019, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1993, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Email = "emily.brown@example.com",
                            EmergencyContact = "3333333333",
                            EmployeeName = "Emily Brown",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 4
                        },
                        new
                        {
                            EmployeeId = 5,
                            ContactNumber = "7777777777",
                            DateJoined = new DateTime(2012, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1978, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            Email = "david.wilson@example.com",
                            EmergencyContact = "8888888888",
                            EmployeeName = "David Wilson",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 5
                        },
                        new
                        {
                            EmployeeId = 6,
                            ContactNumber = "2222222222",
                            DateJoined = new DateTime(2016, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1989, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            Email = "sophia.martinez@example.com",
                            EmergencyContact = "9999999999",
                            EmployeeName = "Sophia Martinez",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 6
                        },
                        new
                        {
                            EmployeeId = 7,
                            ContactNumber = "6666666666",
                            DateJoined = new DateTime(2005, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 7,
                            Email = "daniel.taylor@example.com",
                            EmergencyContact = "1111111111",
                            EmployeeName = "Daniel Taylor",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 7
                        },
                        new
                        {
                            EmployeeId = 8,
                            ContactNumber = "9999999999",
                            DateJoined = new DateTime(2020, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 8,
                            Email = "olivia.anderson@example.com",
                            EmergencyContact = "7777777777",
                            EmployeeName = "Olivia Anderson",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 8
                        },
                        new
                        {
                            EmployeeId = 9,
                            ContactNumber = "3333333333",
                            DateJoined = new DateTime(2018, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1987, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 9,
                            Email = "ethan.thomas@example.com",
                            EmergencyContact = "5555555555",
                            EmployeeName = "Ethan Thomas",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 9
                        },
                        new
                        {
                            EmployeeId = 10,
                            ContactNumber = "8888888888",
                            DateJoined = new DateTime(2013, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1991, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 10,
                            Email = "ava.white@example.com",
                            EmergencyContact = "4444444444",
                            EmployeeName = "Ava White",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 10
                        });
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.EmployeeDataImportExport", b =>
                {
                    b.Property<int>("ImportExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportExportId"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportExportDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImportExportId");

                    b.ToTable("EmployeeDataImportExports");

                    b.HasData(
                        new
                        {
                            ImportExportId = 1,
                            FileName = "employees.xlsx",
                            FilePath = "/uploads/employees.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 2,
                            FileName = "employees_export.xlsx",
                            FilePath = "/exports/employees_export.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        },
                        new
                        {
                            ImportExportId = 3,
                            FileName = "employees_backup.xlsx",
                            FilePath = "/backups/employees_backup.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 4,
                            FileName = "employees_archive.xlsx",
                            FilePath = "/archives/employees_archive.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        },
                        new
                        {
                            ImportExportId = 5,
                            FileName = "employees_data.xlsx",
                            FilePath = "/uploads/employees_data.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 6,
                            FileName = "employees_info.xlsx",
                            FilePath = "/exports/employees_info.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        },
                        new
                        {
                            ImportExportId = 7,
                            FileName = "employees_sheet.xlsx",
                            FilePath = "/uploads/employees_sheet.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 8,
                            FileName = "employees_export_info.xlsx",
                            FilePath = "/exports/employees_export_info.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        },
                        new
                        {
                            ImportExportId = 9,
                            FileName = "employees_data_sheet.xlsx",
                            FilePath = "/uploads/employees_data_sheet.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 10,
                            FileName = "employees_info_backup.xlsx",
                            FilePath = "/exports/employees_info_backup.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        });
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.EmployeeLifecycle", b =>
                {
                    b.Property<int>("LifecycleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LifecycleId"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("LifecycleId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeLifecycles");

                    b.HasData(
                        new
                        {
                            LifecycleId = 1,
                            ActionDate = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 1,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 2,
                            ActionDate = new DateTime(2015, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 2,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 3,
                            ActionDate = new DateTime(2008, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 3,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 4,
                            ActionDate = new DateTime(2019, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 4,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 5,
                            ActionDate = new DateTime(2012, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 5,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 6,
                            ActionDate = new DateTime(2016, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 6,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 7,
                            ActionDate = new DateTime(2005, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 7,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 8,
                            ActionDate = new DateTime(2020, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 8,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 9,
                            ActionDate = new DateTime(2018, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 9,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 10,
                            ActionDate = new DateTime(2013, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 10,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTitleId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            IsActive = true,
                            JobTitleName = "Software Engineer"
                        },
                        new
                        {
                            JobTitleId = 2,
                            IsActive = true,
                            JobTitleName = "HR Manager"
                        },
                        new
                        {
                            JobTitleId = 3,
                            IsActive = true,
                            JobTitleName = "Quality Assurance Analyst"
                        },
                        new
                        {
                            JobTitleId = 4,
                            IsActive = true,
                            JobTitleName = "Marketing Specialist"
                        },
                        new
                        {
                            JobTitleId = 5,
                            IsActive = true,
                            JobTitleName = "Finance Manager"
                        },
                        new
                        {
                            JobTitleId = 6,
                            IsActive = true,
                            JobTitleName = "Operations Coordinator"
                        },
                        new
                        {
                            JobTitleId = 7,
                            IsActive = true,
                            JobTitleName = "IT Support Specialist"
                        },
                        new
                        {
                            JobTitleId = 8,
                            IsActive = true,
                            JobTitleName = "Sales Representative"
                        },
                        new
                        {
                            JobTitleId = 9,
                            IsActive = true,
                            JobTitleName = "Customer Service Representative"
                        },
                        new
                        {
                            JobTitleId = 10,
                            IsActive = true,
                            JobTitleName = "Project Manager"
                        });
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Employee", b =>
                {
                    b.HasOne("Fanush.Models.EmployeeManagement.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fanush.Models.EmployeeManagement.JobTitle", "JobTitle")
                        .WithMany("Employee")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.EmployeeLifecycle", b =>
                {
                    b.HasOne("Fanush.Models.EmployeeManagement.Employee", "Employee")
                        .WithMany("EmployeeLifecycle")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Employee", b =>
                {
                    b.Navigation("EmployeeLifecycle");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.JobTitle", b =>
                {
                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
