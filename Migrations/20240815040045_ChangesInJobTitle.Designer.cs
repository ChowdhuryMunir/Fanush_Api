// <auto-generated />
using System;
using Fanush.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fanush.Migrations
{
    [DbContext(typeof(FanushDbContext))]
    [Migration("20240815040045_ChangesInJobTitle")]
    partial class ChangesInJobTitle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fanush.Entities.TimeAndAttendence.ClockInOut", b =>
                {
                    b.Property<int>("ClockInOutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClockInOutId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClockInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ClockOutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EarlyDepartureReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEarlyDeparture")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLateArrival")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOvertime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkday")
                        .HasColumnType("bit");

                    b.Property<string>("LateArrivalReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OvertimeHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ClockInOutId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ClockInOut");
                });

            modelBuilder.Entity("Fanush.Entities.TimeAndAttendence.Leave", b =>
                {
                    b.Property<int>("LeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveId"));

                    b.Property<string>("ApprovalComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Approver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaidLeave")
                        .HasColumnType("bit");

                    b.Property<string>("LeaveCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("LeaveId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Leave");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Engineering",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Human Resources",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Marketing",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Finance",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentName = "Operations",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 6,
                            DepartmentName = "IT",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 7,
                            DepartmentName = "Sales",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 8,
                            DepartmentName = "Customer Service",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 9,
                            DepartmentName = "Research & Development",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 10,
                            DepartmentName = "Legal",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BloodGroup = "O+",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3148),
                            DateOfBirth = new DateTime(1985, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "john.doe@example.com",
                            EmergencyContactNumber = "9876543210",
                            FathersName = "James Doe",
                            FirstName = "John",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 1,
                            LastName = "Doe",
                            MaritalStatus = "Married",
                            MothersName = "Anna Doe",
                            NationalId = "1234567890123",
                            Nationality = "American",
                            PassportNumber = "A12345678",
                            PermanentAddress = "abc",
                            PhoneNumber = "1234567890",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/john_doe.jpg",
                            Religion = "Christian",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3149)
                        },
                        new
                        {
                            EmployeeId = 2,
                            BloodGroup = "A+",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3155),
                            DateOfBirth = new DateTime(1990, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2015, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "jane.smith@example.com",
                            EmergencyContactNumber = "1234567890",
                            FathersName = "Robert Smith",
                            FirstName = "Jane",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 2,
                            LastName = "Smith",
                            MaritalStatus = "Single",
                            MothersName = "Laura Smith",
                            NationalId = "9876543210987",
                            Nationality = "Canadian",
                            PassportNumber = "B23456789",
                            PermanentAddress = "abc",
                            PhoneNumber = "9876543210",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/jane_smith.jpg",
                            Religion = "Christian",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3155)
                        },
                        new
                        {
                            EmployeeId = 3,
                            BloodGroup = "B+",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3161),
                            DateOfBirth = new DateTime(1982, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2008, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "michael.johnson@example.com",
                            EmergencyContactNumber = "6666666666",
                            FathersName = "David Johnson",
                            FirstName = "Michael",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 3,
                            LastName = "Johnson",
                            MaritalStatus = "Married",
                            MothersName = "Emily Johnson",
                            NationalId = "5555555555555",
                            Nationality = "British",
                            PassportNumber = "C34567890",
                            PermanentAddress = "abc",
                            PhoneNumber = "5555555555",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/michael_johnson.jpg",
                            Religion = "Christian",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3162)
                        },
                        new
                        {
                            EmployeeId = 4,
                            BloodGroup = "AB-",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3166),
                            DateOfBirth = new DateTime(1993, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2019, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Email = "emily.brown@example.com",
                            EmergencyContactNumber = "3333333333",
                            FathersName = "William Brown",
                            FirstName = "Emily",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 4,
                            LastName = "Brown",
                            MaritalStatus = "Single",
                            MothersName = "Elizabeth Brown",
                            NationalId = "4444444444444",
                            Nationality = "Australian",
                            PassportNumber = "D45678901",
                            PermanentAddress = "abc",
                            PhoneNumber = "4444444444",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/emily_brown.jpg",
                            Religion = "Christian",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3166)
                        },
                        new
                        {
                            EmployeeId = 5,
                            BloodGroup = "O-",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3171),
                            DateOfBirth = new DateTime(1978, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2012, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            Email = "david.wilson@example.com",
                            EmergencyContactNumber = "8888888888",
                            FathersName = "Thomas Wilson",
                            FirstName = "David",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 5,
                            LastName = "Wilson",
                            MaritalStatus = "Married",
                            MothersName = "Sophia Wilson",
                            NationalId = "7777777777777",
                            Nationality = "New Zealander",
                            PassportNumber = "E56789012",
                            PermanentAddress = "abc",
                            PhoneNumber = "7777777777",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/david_wilson.jpg",
                            Religion = "Christian",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3171)
                        },
                        new
                        {
                            EmployeeId = 6,
                            BloodGroup = "A-",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3175),
                            DateOfBirth = new DateTime(1989, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2016, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            Email = "sophia.martinez@example.com",
                            EmergencyContactNumber = "9999999999",
                            FathersName = "Carlos Martinez",
                            FirstName = "Sophia",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 6,
                            LastName = "Martinez",
                            MaritalStatus = "Single",
                            MothersName = "Maria Martinez",
                            NationalId = "2222222222222",
                            Nationality = "Spanish",
                            PassportNumber = "F67890123",
                            PermanentAddress = "abc",
                            PhoneNumber = "2222222222",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/sophia_martinez.jpg",
                            Religion = "Catholic",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3176)
                        },
                        new
                        {
                            EmployeeId = 7,
                            BloodGroup = "B-",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3180),
                            DateOfBirth = new DateTime(1980, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2005, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 7,
                            Email = "daniel.taylor@example.com",
                            EmergencyContactNumber = "1111111111",
                            FathersName = "Henry Taylor",
                            FirstName = "Daniel",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 7,
                            LastName = "Taylor",
                            MaritalStatus = "Married",
                            MothersName = "Alice Taylor",
                            NationalId = "6666666666666",
                            Nationality = "South African",
                            PassportNumber = "G78901234",
                            PermanentAddress = "abc",
                            PhoneNumber = "6666666666",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/daniel_taylor.jpg",
                            Religion = "Jewish",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3180)
                        },
                        new
                        {
                            EmployeeId = 8,
                            BloodGroup = "AB+",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3186),
                            DateOfBirth = new DateTime(1995, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2020, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 8,
                            Email = "olivia.anderson@example.com",
                            EmergencyContactNumber = "7777777777",
                            FathersName = "George Anderson",
                            FirstName = "Olivia",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 8,
                            LastName = "Anderson",
                            MaritalStatus = "Single",
                            MothersName = "Eleanor Anderson",
                            NationalId = "9999999999999",
                            Nationality = "American",
                            PassportNumber = "H89012345",
                            PermanentAddress = "abc",
                            PhoneNumber = "9999999999",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/olivia_anderson.jpg",
                            Religion = "Christian",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3186)
                        },
                        new
                        {
                            EmployeeId = 9,
                            BloodGroup = "O+",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3191),
                            DateOfBirth = new DateTime(1987, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2018, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 9,
                            Email = "ethan.thomas@example.com",
                            EmergencyContactNumber = "5555555555",
                            FathersName = "Samuel Thomas",
                            FirstName = "Ethan",
                            Gender = "Male",
                            IsActive = true,
                            JobTitleId = 9,
                            LastName = "Thomas",
                            MaritalStatus = "Married",
                            MothersName = "Lily Thomas",
                            NationalId = "3333333333333",
                            Nationality = "Indian",
                            PassportNumber = "I90123456",
                            PermanentAddress = "abc",
                            PhoneNumber = "3333333333",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/ethan_thomas.jpg",
                            Religion = "Christian",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3191)
                        },
                        new
                        {
                            EmployeeId = 10,
                            BloodGroup = "A+",
                            CreatedBy = "Admin",
                            CreatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3195),
                            DateOfBirth = new DateTime(1991, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2013, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 10,
                            Email = "ava.white@example.com",
                            EmergencyContactNumber = "4444444444",
                            FathersName = "Frank White",
                            FirstName = "Ava",
                            Gender = "Female",
                            IsActive = true,
                            JobTitleId = 10,
                            LastName = "White",
                            MaritalStatus = "Single",
                            MothersName = "Grace White",
                            NationalId = "8888888888888",
                            Nationality = "Canadian",
                            PassportNumber = "J01234567",
                            PermanentAddress = "abc",
                            PhoneNumber = "8888888888",
                            PresentAddress = "abc",
                            ProfileImagePath = "/images/profiles/ava_white.jpg",
                            Religion = "Christian",
                            UpdatedBy = "Admin",
                            UpdatedOn = new DateTime(2024, 8, 15, 4, 0, 43, 56, DateTimeKind.Utc).AddTicks(3196)
                        });
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.EmployeeDataImportExport", b =>
                {
                    b.Property<int>("ImportExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportExportId"));

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportExportDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImportExportId");

                    b.ToTable("EmployeeDataImportExports");

                    b.HasData(
                        new
                        {
                            ImportExportId = 1,
                            FileName = "employees.xlsx",
                            FilePath = "/uploads/employees.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 2,
                            FileName = "employees_export.xlsx",
                            FilePath = "/exports/employees_export.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        },
                        new
                        {
                            ImportExportId = 3,
                            FileName = "employees_backup.xlsx",
                            FilePath = "/backups/employees_backup.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 4,
                            FileName = "employees_archive.xlsx",
                            FilePath = "/archives/employees_archive.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        },
                        new
                        {
                            ImportExportId = 5,
                            FileName = "employees_data.xlsx",
                            FilePath = "/uploads/employees_data.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 6,
                            FileName = "employees_info.xlsx",
                            FilePath = "/exports/employees_info.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        },
                        new
                        {
                            ImportExportId = 7,
                            FileName = "employees_sheet.xlsx",
                            FilePath = "/uploads/employees_sheet.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 8,
                            FileName = "employees_export_info.xlsx",
                            FilePath = "/exports/employees_export_info.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        },
                        new
                        {
                            ImportExportId = 9,
                            FileName = "employees_data_sheet.xlsx",
                            FilePath = "/uploads/employees_data_sheet.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Import"
                        },
                        new
                        {
                            ImportExportId = 10,
                            FileName = "employees_info_backup.xlsx",
                            FilePath = "/exports/employees_info_backup.xlsx",
                            ImportExportDate = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Type = "Export"
                        });
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.EmployeeLifecycle", b =>
                {
                    b.Property<int>("LifecycleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LifecycleId"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("LifecycleId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeLifecycles");

                    b.HasData(
                        new
                        {
                            LifecycleId = 1,
                            ActionDate = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 1,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 2,
                            ActionDate = new DateTime(2015, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 2,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 3,
                            ActionDate = new DateTime(2008, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 3,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 4,
                            ActionDate = new DateTime(2019, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 4,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 5,
                            ActionDate = new DateTime(2012, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 5,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 6,
                            ActionDate = new DateTime(2016, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 6,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 7,
                            ActionDate = new DateTime(2005, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 7,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 8,
                            ActionDate = new DateTime(2020, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 8,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 9,
                            ActionDate = new DateTime(2018, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 9,
                            IsActive = true
                        },
                        new
                        {
                            LifecycleId = 10,
                            ActionDate = new DateTime(2013, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActionType = "Onboarding",
                            EmployeeId = 10,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTitleId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            IsActive = true,
                            JobTitleName = "Software Engineer"
                        },
                        new
                        {
                            JobTitleId = 2,
                            IsActive = true,
                            JobTitleName = "HR Manager"
                        },
                        new
                        {
                            JobTitleId = 3,
                            IsActive = true,
                            JobTitleName = "Quality Assurance Analyst"
                        },
                        new
                        {
                            JobTitleId = 4,
                            IsActive = true,
                            JobTitleName = "Marketing Specialist"
                        },
                        new
                        {
                            JobTitleId = 5,
                            IsActive = true,
                            JobTitleName = "Finance Manager"
                        },
                        new
                        {
                            JobTitleId = 6,
                            IsActive = true,
                            JobTitleName = "Operations Coordinator"
                        },
                        new
                        {
                            JobTitleId = 7,
                            IsActive = true,
                            JobTitleName = "IT Support Specialist"
                        },
                        new
                        {
                            JobTitleId = 8,
                            IsActive = true,
                            JobTitleName = "Sales Representative"
                        },
                        new
                        {
                            JobTitleId = 9,
                            IsActive = true,
                            JobTitleName = "Customer Service Representative"
                        },
                        new
                        {
                            JobTitleId = 10,
                            IsActive = true,
                            JobTitleName = "Project Manager"
                        });
                });

            modelBuilder.Entity("Fanush.Entities.TimeAndAttendence.ClockInOut", b =>
                {
                    b.HasOne("Fanush.Models.EmployeeManagement.Employee", "Employee")
                        .WithMany("ClockInOuts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Fanush.Entities.TimeAndAttendence.Leave", b =>
                {
                    b.HasOne("Fanush.Models.EmployeeManagement.Employee", "Employee")
                        .WithMany("leaves")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Employee", b =>
                {
                    b.HasOne("Fanush.Models.EmployeeManagement.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fanush.Models.EmployeeManagement.JobTitle", "JobTitle")
                        .WithMany("Employee")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.EmployeeLifecycle", b =>
                {
                    b.HasOne("Fanush.Models.EmployeeManagement.Employee", "Employee")
                        .WithMany("EmployeeLifecycles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.Employee", b =>
                {
                    b.Navigation("ClockInOuts");

                    b.Navigation("EmployeeLifecycles");

                    b.Navigation("leaves");
                });

            modelBuilder.Entity("Fanush.Models.EmployeeManagement.JobTitle", b =>
                {
                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
